[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "video-artifacts-processing-engine"
version = "0.1.0"
description = "Video Artifacts Processing Engine to produce the video quotes and shorts artifacts with pure ffmpeg and local code. No LLM involved."
authors = [
    {name = "Nam", email = "namhbui03@gmail.com"}
]
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "boto3>=1.38.0",
    "botocore>=1.29.0",
    "ffmpeg-python>=0.2.0",
    "pydub>=0.25.1",
    "python-dotenv>=1.0.0",
    "python-dateutil>=2.9.0",
    "requests>=2.31.0",
    "urllib3>=1.26.18,<3.0.0",
    "tenacity>=8.2.0",
    "psutil>=5.9.0",
    "joblib>=1.3.0",
    "psycopg2-binary>=2.9.9",
    "dotenv>=0.9.9",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.scripts]
hello = "video_artifact_processing_engine.main:main"

[project.urls]
Homepage = "https://github.com/yourusername/my-python-project"
Repository = "https://github.com/yourusername/my-python-project"
Issues = "https://github.com/yourusername/my-python-project/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/video_artifact_processing_engine"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py38"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
